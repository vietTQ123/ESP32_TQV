#include <Adafruit_GFX.h>
#include <Adafruit_ST7735.h>
#include <MAX30100_PulseOximeter.h>
#include <Fonts/DSEG7_Classic_Mini_Bold_25.h>
#include <Fonts/SFProText_Semibold12pt7b.h>
#include <SPI.h>
#include <Wire.h>

#define TFT_CS 10
#define TFT_RST 12
#define TFT_DC 8
#define TFT_SCK 13
#define TFT_MOSI 11

#define REPORTING_PERIOD_MS 1000

Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_RST);

PulseOximeter pox;

uint32_t tsLastReport = 0;

int heart_new=1;
int heart_old=1;
int spo2_new=1;
int spo2_old=1;

const unsigned short heart[1024] PROGMEM = {
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, // 0x0010 (16) pixels
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, // 0x0020 (32) pixels
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFAAA, 0xFAEB, 0xFACB, 0xFACB, 0xFAEB, 0xFAAA, 0x0000, 0x0000, 0x0000, 0x0000, // 0x0030 (48) pixels
    0x0000, 0x0000, 0x0000, 0x0000, 0xF929, 0xF92B, 0xF92B, 0xF92B, 0xF94B, 0xF94A, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, // 0x0040 (64) pixels
    0x0000, 0x0000, 0x0000, 0x0000, 0xFAAA, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFAAA, 0x0000, 0x0000, // 0x0050 (80) pixels
    0x0000, 0x0000, 0xF92A, 0xF8EB, 0xF82B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF82B, 0xF8EB, 0xF94A, 0x0000, 0x0000, 0x0000, 0x0000, // 0x0060 (96) pixels
    0x0000, 0x0000, 0x0000, 0xFAEB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0x0000, // 0x0070 (112) pixels
    0x0000, 0xF94B, 0xF84B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF82B, 0xF92B, 0x0000, 0x0000, 0x0000, // 0x0080 (128) pixels
    0x0000, 0x0000, 0xFAEB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFAEB, // 0x0090 (144) pixels
    0xF92B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF92B, 0x0000, 0x0000, // 0x00A0 (160) pixels
    0x0000, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, // 0x00B0 (176) pixels
    0xF82B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF82B, 0xF94B, 0x0000, // 0x00C0 (192) pixels
    0x0000, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, // 0x00D0 (208) pixels
    0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF8AB, 0x0000, // 0x00E0 (224) pixels
    0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, // 0x00F0 (240) pixels
    0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF94B, // 0x0100 (256) pixels
    0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, // 0x0110 (272) pixels
    0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF8EB, // 0x0120 (288) pixels
    0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, // 0x0130 (304) pixels
    0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF88B, // 0x0140 (320) pixels
    0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, // 0x0150 (336) pixels
    0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF82B, // 0x0160 (352) pixels
    0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFAEB, 0xEE18, 0xF5D7, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xEDF7, // 0x0170 (368) pixels
    0xD65B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF82B, // 0x0180 (384) pixels
    0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xF451, 0xE79D, 0xE79D, 0xFC10, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFC30, 0xE79D, // 0x0190 (400) pixels
    0xC71C, 0xEB94, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF84B, // 0x01A0 (416) pixels
    0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFAEB, 0xEEBA, 0xE79D, 0xE79D, 0xEE79, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xEE99, 0xE79D, // 0x01B0 (432) pixels
    0xC71C, 0xCEDC, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF86B, // 0x01C0 (448) pixels
    0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xF451, 0xE79D, 0xEE79, 0xEEBA, 0xE79D, 0xFC10, 0xFACB, 0xFACB, 0xFC30, 0xE79D, 0xEE9A, // 0x01D0 (464) pixels
    0xCEDC, 0xC71C, 0xEB94, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF8CB, // 0x01E0 (480) pixels
    0xF534, 0xEEFB, 0xEEFB, 0xEEFB, 0xEEFB, 0xEF5D, 0xE79D, 0xFC30, 0xF471, 0xE79D, 0xEE59, 0xFACB, 0xFACB, 0xEE99, 0xE79D, 0xFC51, // 0x01F0 (496) pixels
    0xEBD4, 0xC71C, 0xC71C, 0xCEFC, 0xCEFC, 0xCEFC, 0xCEFC, 0xCEFC, 0xCEFC, 0xD69B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF92B, // 0x0200 (512) pixels
    0xFCB2, 0xEF3C, 0xE79D, 0xE79D, 0xE79D, 0xE79D, 0xEE18, 0xFACB, 0xFAEB, 0xEEBA, 0xE79D, 0xFC10, 0xFC30, 0xE79D, 0xEE9A, 0xFAEB, // 0x0210 (528) pixels
    0xF80B, 0xD69B, 0xC71C, 0xC71C, 0xC71C, 0xC71C, 0xC71C, 0xC71C, 0xC71C, 0xCEDC, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF82B, 0xF98C, // 0x0220 (544) pixels
    0x0000, 0xFAEB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xF471, 0xE79D, 0xEE59, 0xEE99, 0xE79D, 0xFC51, 0xFACB, // 0x0230 (560) pixels
    0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF8EB, 0x0000, // 0x0240 (576) pixels
    0x0000, 0xFAAA, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFAEB, 0xEEBA, 0xE79D, 0xE79D, 0xEE9A, 0xFAEB, 0xFACB, // 0x0250 (592) pixels
    0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF82B, 0xF98C, 0x0000, // 0x0260 (608) pixels
    0x0000, 0x0000, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xF471, 0xE79D, 0xE79D, 0xFC51, 0xFACB, 0xFACB, // 0x0270 (624) pixels
    0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF90B, 0x0000, 0x0000, // 0x0280 (640) pixels
    0x0000, 0x0000, 0x0000, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFAEB, 0xEE59, 0xEE38, 0xFAEB, 0xFACB, 0xFACB, // 0x0290 (656) pixels
    0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF8CB, 0x0000, 0x0000, 0x0000, // 0x02A0 (672) pixels
    0x0000, 0x0000, 0x0000, 0xFAAA, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, // 0x02B0 (688) pixels
    0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF86B, 0xF98B, 0x0000, 0x0000, 0x0000, // 0x02C0 (704) pixels
    0x0000, 0x0000, 0x0000, 0x0000, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, // 0x02D0 (720) pixels
    0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF86B, 0xF94B, 0x0000, 0x0000, 0x0000, 0x0000, // 0x02E0 (736) pixels
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFAEB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, // 0x02F0 (752) pixels
    0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF86B, 0xF94B, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, // 0x0300 (768) pixels
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, // 0x0310 (784) pixels
    0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF86B, 0xF94A, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, // 0x0320 (800) pixels
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFB0C, 0xFAEB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, // 0x0330 (816) pixels
    0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF8AB, 0xF98C, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, // 0x0340 (832) pixels
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFAEB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, // 0x0350 (848) pixels
    0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF90B, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, // 0x0360 (864) pixels
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, 0xFACB, // 0x0370 (880) pixels
    0xF80B, 0xF80B, 0xF80B, 0xF80B, 0xF84B, 0xF94B, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, // 0x0380 (896) pixels
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFAAA, 0xFAEB, 0xFACB, 0xFACB, 0xFACB, // 0x0390 (912) pixels
    0xF80B, 0xF80B, 0xF80B, 0xF8EB, 0xF98C, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, // 0x03A0 (928) pixels
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFACB, 0xFACB, 0xFACB, // 0x03B0 (944) pixels
    0xF80B, 0xF8AB, 0xF94B, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, // 0x03C0 (960) pixels
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFACB, // 0x03D0 (976) pixels
    0xF92B, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, // 0x03E0 (992) pixels
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, // 0x03F0 (1008) pixels
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, // 0x0400 (1024) pixels
};

void setup()
{
  tft.initR(INITR_BLACKTAB);
  tft.fillScreen(ST7735_WHITE);
  tft.setRotation(3);

  Serial.begin(9600);

  Serial.print("Initializing pulse oximeter..");

  if (!pox.begin())
  {
    Serial.println("FAILED");
    for (;;)
      ;
  }
  else
  {
    Serial.println("SUCCESS");
  }

  pox.setIRLedCurrent(MAX30100_LED_CURR_7_6MA);
}

void loop()
{
  tft.setFont(&SFProText_Semibold12pt7b);

  tft.setCursor(5, 30);
  tft.setTextColor(ST7735_RED);
  tft.setTextSize(1);
  tft.println("HEART");

  tft.setCursor(5, 90);
  tft.setTextColor(ST7735_BLUE);
  tft.setTextSize(1);
  tft.println("SPO2");

  pox.update();

  if (millis() - tsLastReport > REPORTING_PERIOD_MS)
  {
    Serial.print("Heart BPM:");
    Serial.print(pox.getHeartRate());
    Serial.print("-----");
    Serial.print("Oxygen Percent:");
    Serial.print(pox.getSpO2());
    Serial.println("\n");

    heart_new=pox.getHeartRate();
    spo2_new=pox.getSpO2();

    tft.setFont(&DSEG7_Classic_Mini_Bold_25);

    if(heart_new != heart_old)
    {
      tft.fillRect(5,35,110,37,ST7735_WHITE);

      heart_old =heart_new;
    }

    tft.setCursor(5, 65);
    tft.setTextColor(ST7735_BLACK);
    tft.setTextSize(1);
    tft.println(pox.getHeartRate());

    if(spo2_new != spo2_old)
    {
      tft.fillRect(5,95,110,35,ST7735_WHITE);

      spo2_old = spo2_new;
    }

    tft.setCursor(5, 123);
    tft.setTextColor(ST7735_BLACK);
    tft.setTextSize(1);
    tft.println(pox.getSpO2());

    tsLastReport = millis();
  }
}
